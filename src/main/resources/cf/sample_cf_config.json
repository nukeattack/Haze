{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "SourceBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "ods_bucket",
        "NotificationConfiguration": {
          "QueueConfiguration": {
            "Id": 1,
            "Queue": "ingestion-queue-dev",
            "Event": "s3:ObjectCreated:Put"
          }
        }
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "net-meteogroup-posi-prod-processor",
              "dev",
              "eu-west-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "IamPolicyLambdaExecution": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              "dev",
              "net-meteogroup-posi-prod-processor",
              "lambda"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream"
              ],
              "Resource": "arn:aws:logs:eu-west-1:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:eu-west-1:*:*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambdaExecution"
          }
        ]
      }
    },
    "ProcessorLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/net-meteogroup-posi-prod-processor/dev/1482840662814-2016-12-27T12:11:02.814Z/target/point-observation-processor-1.0-SNAPSHOT.jar"
        },
        "FunctionName": "processor-dev",
        "Handler": "com.meteogroup.observation.processor.infrastructure.aws.lambda.ProcessorRequestHandler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "java8",
        "Timeout": 300
      },
      "DependsOn": [
        "IamPolicyLambdaExecution",
        "IamRoleLambdaExecution"
      ]
    },
    "ProcessorLambdaVersionNoVBeXjZpDklNKf3k6JBr2Mbk72MP0Uc3QNos5ebk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProcessorLambdaFunction"
        },
        "CodeSha256": "NoVBeXjZ/pDk/lNKf3k6JBr2Mbk72MP0Uc3QNos5ebk="
      }
    },
    "ProcessorEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ProcessorLambdaFunction",
                "Arn"
              ]
            },
            "Id": "processorSchedule"
          }
        ]
      }
    },
    "ProcessorLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessorLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ProcessorEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "DataIngestionDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "dead-ingestion-queue-dev"
      }
    },
    "DataRejectionHandlerQueue": {
      "DependsOn": "DataIngestionDeadLetterQueue",
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "ingestion-rejected-queue-dev"
      }
    },
    "IngestionQueue": {
      "DependsOn": "DataRejectionHandlerQueue",
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "ingestion-queue-dev",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "DataIngestionDeadLetterQueue",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        }
      }
    },
    "AllowQueusToGetEventFromS3Bucket": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sqs:*"
              ],
              "Principal": {
                "AWS": "*"
              },
              "Resource": "*"
            }
          ]
        },
        "Queues": [
          {
            "Ref": "IngestionQueue"
          },
          {
            "Ref": "DataRejectionHandlerQueue"
          },
          {
            "Ref": "DataIngestionDeadLetterQueue"
          }
        ]
      }
    },
    "DataProjectionSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName" : "net_meteogroup_epam-dev_pr_topic_dev",
        "TopicName" : "net_meteogroup_epam-dev_pr_topic_dev",
        "Subscription": [
          {
            "Endpoint": {
              "Fn::GetAtt": [
                "DataProjectionQueue",
                "Arn"
              ]
            },
            "Protocol": "sqs"
          }
        ]
      }
    },

    "AWSLambdaAccessExecutionRole": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": "Creating policy for lambda execution.",
        "Roles": [
          {
            "Ref": "IamRoleLambdaExecution"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudwatch:*",
                "events:*",
                "lambda:*",
                "s3:*",
                "sns:*"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ProcessorLambdaFunctionArn": {
      "Description": "Lambda function info",
      "Value": {
        "Fn::GetAtt": [
          "ProcessorLambdaFunction",
          "Arn"
        ]
      }
    },
    "ProcessorLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProcessorLambdaVersionNoVBeXjZpDklNKf3k6JBr2Mbk72MP0Uc3QNos5ebk"
      }
    }
  }
}